class Solution {
    public long kthElement(int k, int arr1[], int arr2[]) {
        // code here
        int n1 = arr1.length, n2 = arr2.length;
        if (n1 > n2) {
            return findKthElement(arr2, arr1, k);
        }

        int low = Math.max(0, k - n2);
        int high = Math.min(k, n1);

        while (low <= high) {
            int cut1 = low + (high - low) / 2;
            int cut2 = k - cut1;

            int left1 = (cut1 > 0) ? arr1[cut1 - 1] : Integer.MIN_VALUE;
            int left2 = (cut2 > 0) ? arr2[cut2 - 1] : Integer.MIN_VALUE;

            int right1 = (cut1 < n1) ? arr1[cut1] : Integer.MAX_VALUE;
            int right2 = (cut2 < n2) ? arr2[cut2] : Integer.MAX_VALUE;

            if (left1 <= right2 && left2 <= right1) {
                return Math.max(left1, left2);
            } else if (left1 > right2) {
                high = cut1 - 1;
            } else {
                low = cut1 + 1;
            }
        }

        return -1;
    }
}

class Solution {
    int median(int matrix[][], int R, int C) {
        // code here   
        int low = 1;
        int high = 2000; 
        int medianPosition = (R * C) / 2; 
        while (low < high) {
            int mid = low + (high - low) / 2;
            int count = 0;
            for (int i = 0; i < R; i++) {
                count += countLessEqual(matrix[i], mid);
            }

            if (count <= medianPosition) {
                low = mid + 1; // Median is greater
            } 
            else {
                high = mid; // Median is less or equal
            }
        }
        return low; // The median value
    }
    private static int countLessEqual(int[] row, int target) {
        int left = 0, right = row.length;
        while (left < right) {
            int mid = left + (right - left) / 2;
            if (row[mid] <= target) {
                left = mid + 1;
            } else {
                right = mid;
            }
        }
        return left; 
    }
}

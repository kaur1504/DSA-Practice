import java.util.*;

public class AggressiveCows {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt(); // Number of test cases

        while (t-- > 0) {
            int n = sc.nextInt(); // Number of stalls
            int c = sc.nextInt(); // Number of cows
            int[] stalls = new int[n];

            for (int i = 0; i < n; i++) {
                stalls[i] = sc.nextInt();
            }

            System.out.println(findLargestMinimumDistance(stalls, n, c));
        }
        sc.close();
    }

    private static int findLargestMinimumDistance(int[] stalls, int n, int c) {
        Arrays.sort(stalls); // Sort the stall positions

        int low = 1; // Minimum possible distance
        int high = stalls[n - 1] - stalls[0]; // Maximum possible distance
        int result = 0;

        while (low <= high) {
            int mid = low + (high - low) / 2;

            if (canPlaceCows(stalls, n, c, mid)) {
                result = mid; // Update result to the current valid distance
                low = mid + 1; // Try for a larger distance
            } else {
                high = mid - 1; // Try for a smaller distance
            }
        }

        return result;
    }

    private static boolean canPlaceCows(int[] stalls, int n, int c, int distance) {
        int count = 1; // Place the first cow in the first stall
        int lastPlaced = stalls[0];

        for (int i = 1; i < n; i++) {
            if (stalls[i] - lastPlaced >= distance) {
                count++;
                lastPlaced = stalls[i]; // Place the next cow

                if (count == c) {
                    return true; // All cows placed successfully
                }
            }
        }

        return false; // Not all cows could be placed
    }
}

class Solution {
    public int[] sortArray(int[] nums) {
        int[]sortedarr=merge(nums,0,nums.length-1);
        return sortedarr;
    }
    public static int[] merge(int[]arr,int start,int end){
        if(start==end){
            int[]ans=new int[1];
            ans[0]=arr[start];
            return ans;
        }
        int mid=start+(end-start)/2;
        int[] left=merge(arr,start,mid);
        int[] right=merge(arr,mid+1,end);
        return mergetwosortedarray(left,right);
    }
    public static int[] mergetwosortedarray(int[]arr1,int[]arr2){
        int[]res=new int[arr1.length+arr2.length];
        int i=0;
        int j=0;
        int k=0;
        while(i<arr1.length && j<arr2.length){
            if(arr1[i]<=arr2[j]){
                res[k]=arr1[i];
                i++;
                k++;
            }
            else{
                res[k]=arr2[j];
                j++;
                k++;
            }
        }while(i<arr1.length){
            res[k++]=arr1[i++];
        }
        while(j<arr2.length){
            res[k++]=arr2[j++];
        }
        return res;
    }
}

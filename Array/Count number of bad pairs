class Solution {
    public long countBadPairs(int[] nums) {
        // long count=0;
        // for(int i=0;i<nums.length;i++){
        //     for(int j=i+1;j<nums.length;j++){
        //         if(i<j && j-i!=nums[j]-nums[i]){
        //             count++;
        //         }
        //     }
        // } time limit exceeded
        // return count;
        HashMap<Integer, Integer> map = new HashMap<>();
        long count = 0;
        for (int i = 0; i < nums.length; i++) {
            int key = nums[i] - i;
            count += map.getOrDefault(key, 0);
            map.put(key, map.getOrDefault(key, 0) + 1);
        }
        return (long)nums.length*(nums.length-1)/2-count;
    }
}

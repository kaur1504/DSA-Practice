class Solution {
    public boolean isValidSudoku(char[][] board) {
        for (int row = 0; row < 9; row++) {
            for (int col = 0; col < 9; col++) {
                char current = board[row][col];
                if (current != '.' && !isValid(board, row, col, current)) {
                    return false;
                }
            }
        }
        return true;
    }
    private static boolean isValid(char[][] board, int row, int col, char current) {
        // Check row
        for (int i = 0; i < 9; i++) {
            if (i != col && board[row][i] == current) {
                return false;
         }
        }
        for (int i = 0; i < 9; i++) {
            if (i != row && board[i][col] == current) {
                return false;
            }
        }
        int startRow = (row / 3) * 3;
        int startCol = (col / 3) * 3;
        for (int i = startRow; i < startRow + 3; i++) {
            for (int j = startCol; j < startCol + 3; j++) {
                if ((i != row || j != col) && board[i][j] == current) {
                    return false;
                }        }
        }
        return true;
    }
    }

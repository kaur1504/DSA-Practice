class Solution {
    public int numIslands(char[][] grid) {
        int count = 0;
        for(int i=0;i<grid.length;i++) {
            for(int j = 0; j < grid[0].length; j++) {
                if(grid[i][j]=='1'){
                    count++;
                    dfs(grid, i, j);
                }
            }
        }
        return count;
    }
    public void dfs(char[][] grid, int r, int c) {
        int ROW = grid.length;
        int COL = grid[0].length;
        if(r < 0 || c < 0 || r >= ROW || c >= COL || grid[r][c] == '0') {
            return;
        }
        if(grid[r][c] == '1') {
            grid[r][c] = '0';
        }
        dfs(grid, r+1, c);
        dfs(grid, r, c+1);
        dfs(grid, r-1, c);
        dfs(grid, r, c-1);
    }
}
